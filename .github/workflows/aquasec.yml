
name: Build and scan

on: 
  pull_request:

  push:
    branches:
      - main

env:
   ### DOCKER_REPO AND IMAGE_REPO ARE SET IN LINES 26ff now
   #DOCKER_REPOSITORY: ${{ secrets.DOCKERHUB_USERNAME }} # name of Docker Hub Org ID
   #IMAGE_NAME: workshop-node-app
   IMAGE_TAG: ${{ github.run_number }} 

jobs:
  aqua:
    name: Aqua Code Scan 
    runs-on: ubuntu-latest
    steps:
      - name: Set env variable based on triggering user
        id: set-env
        run: |
          if [ "${{ github.actor }}" == "togerhar-aqua" ]; then
            echo "DOCKER_REPOSITORY=${{ secrets.DOCKERHUB_USERNAME_TOBI }}" >> $GITHUB_ENV
            echo "IMAGE_NAME=gh-workshop-demo" >> $GITHUB_ENV
          elif [ "${{ github.actor }}" == "iheanyinjeze" ]; then
            echo "DOCKER_REPOSITORY=${{ secrets.DOCKERHUB_USERNAME }}" >> $GITHUB_ENV
            echo "IMAGE_NAME=workshop-node-app" >> $GITHUB_ENV
          else
            echo "DOCKER_REPOSITORY=${{ secrets.DOCKERHUB_USERNAME }}" >> $GITHUB_ENV
            echo "IMAGE_NAME=workshop-node-app" >> $GITHUB_ENV
          fi
          
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download Trivy HTML template
        run: |
          mkdir -p contrib
          curl -sSL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/html.tpl -o contrib/html.tpl
      
      - name: Code Scanner (SCA/SAST/Misconfig/Sensitive Data) 
        uses: docker://aquasec/aqua-scanner:latest
        with:
          args: trivy fs --format template --template "@contrib/html.tpl" -o aqua-sscs-report.html --scanners config,vuln,secret --sast --reachability --package-json . 
        env:
          AQUA_KEY: ${{ secrets.AQUA_KEY }}
          AQUA_SECRET: ${{ secrets.AQUA_SECRET }}
          GITHUB_TOKEN: ${{ github.token }}
          TRIVY_RUN_AS_PLUGIN: 'aqua'
          # use the below 2 lines only if environments are deployed in eu region
          # AQUA_URL: https://api.eu-1.supply-chain.cloud.aquasec.com
          # CSPM_URL: https://eu-1.api.cloudsploit.com

      - name: Upload Trivy scan results
        uses: actions/upload-artifact@v4
        with:
          name: aqua-sscs-results
          path: aqua-sscs-report.html

      - name: Log in to Docker Hub depending on user iheanyinjeze
        if: github.actor == 'iheanyinjeze'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PAT }}

      - name: Log in to Docker Hub depending on user togerhar-aqua
        if: github.actor == 'togerhar-aqua'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME_TOBI }}
          password: ${{ secrets.DOCKERHUB_PAT_TOBI }}

      - name: Log in to Docker Hub for any other user
        if: github.actor != 'togerhar-aqua' && github.actor != 'iheanyinjeze'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PAT }}

      - name: Build Docker image
        uses: docker/build-push-action@v6.16.0
        with:
          context: .
          file: ./Dockerfile
          push: false
          tags: ${{ env.DOCKER_REPOSITORY}}/${{ env.IMAGE_NAME}}:${{ env.IMAGE_TAG}}
        env:
          DOCKER_BUILD_SUMMARY: false

      - name: Login to Aqua Registry
        uses: docker/login-action@v3
        with:
          registry: registry.aquasec.com
          username: ${{ secrets.AQUA_REGISTRY_USERNAME }}
          password: ${{ secrets.AQUA_REGISTRY_PASS }}
          
      - name: Image Scan with Trivy Premium
        run: |
          docker run -e BUILD_ENV=test -e BUILD_JOB_NAME=${{ env.IMAGE_NAME}} -e BUILD_NUMBER=${{ env.IMAGE_TAG }} --rm -v /var/run/docker.sock:/var/run/docker.sock registry.aquasec.com/scanner:latest-saas scan --host ${{ secrets.AQUA_HOST_SUPERS }} --local ${{ env.DOCKER_REPOSITORY}}/${{ env.IMAGE_NAME}}:${{ env.IMAGE_TAG}} --token ${{ secrets.AQUA_TOKEN }} --layer-vulnerabilities --no-verify --sarif > results.sarif

      - name: Upload SARIF report
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: results.sarif
  
      - name: Push Docker image
        uses: docker/build-push-action@v6.16.0
        with:
          push: true
          tags: ${{ env.DOCKER_REPOSITORY}}/${{ env.IMAGE_NAME}}:${{ env.IMAGE_TAG}}
        env:
          DOCKER_BUILD_SUMMARY: false
          
      - name: SBOM/Manifest Generation
        run: |
          export BILLY_SERVER=https://billy.codesec.aquasec.com
          curl -sLo install.sh download.codesec.aquasec.com/billy/install.sh
          curl -sLo install.sh.checksum https://github.com/argonsecurity/releases/releases/latest/download/install.sh.checksum
          if ! cat install.sh.checksum | sha256sum --check; then
          echo "install.sh checksum failed"
          exit 1
          fi
          BINDIR="." sh install.sh
          rm install.sh install.sh.checksum
          ./billy generate \
            --access-token "${{ secrets.GITHUB_TOKEN }}" \
            --aqua-key "${{ secrets.AQUA_KEY }}" \
            --aqua-secret "${{ secrets.AQUA_SECRET }}" \
            --artifact-path "${{ env.DOCKER_REPOSITORY}}/${{ env.IMAGE_NAME}}:${{ env.IMAGE_TAG}}" 
      
      - name: Azure Login
        uses: azure/login@v2.3.0
        with:
          creds: ${{ secrets.AKS_SP }}

      - name: Get AKS config
        run: |
          az aks get-credentials \
            --resource-group emea-aguisado-tes_group \
            --name emea-aguisado-test \
            --overwrite-existing

      - name: Deploy app to AKS
        run: |
          kubectl apply -f manifests/dev/ns.yaml
          sed -i "s|{{ IMAGE_CONTAINER }}|${{ env.DOCKER_REPOSITORY}}/${{ env.IMAGE_NAME}}:${{ env.IMAGE_TAG}}|g" manifests/dev/deployment.yaml
          kubectl apply -f manifests/dev/deployment.yaml
          kubectl apply -f manifests/dev/service.yaml
